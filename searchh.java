
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Toshiba
 */
public class searchh extends javax.swing.JFrame {

    /**
     * Creates new form searchh
     */
    public searchh() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        T1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        R1 = new javax.swing.JTextPane();

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Toshiba\\Desktop\\ojuDZwU.jpg")); // NOI18N
        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jButton1.setBackground(new java.awt.Color(204, 0, 204));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 0, 204));
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(220, 102, 103, 25);

        T1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T1ActionPerformed(evt);
            }
        });
        getContentPane().add(T1);
        T1.setBounds(39, 95, 163, 30);

        jLabel2.setFont(new java.awt.Font("SketchFlow Print", 2, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setText("RETRIEVR");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(96, 46, 227, 38);

        jScrollPane2.setViewportView(R1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(40, 140, 290, 130);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
        readCsvFile(T1.getText());
        T1.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void T1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T1ActionPerformed
 public void readCsvFile(String word) {
            String comma =",";
    String f_name="E://project//"+word+".txt";
    File file = new File(f_name);

        BufferedReader fileReader = null;

      

        try {

             
        fileReader = new BufferedReader(new FileReader(file));
            //Create a new list of student to be filled by CSV file data 

            ArrayList<splitting> list;
            list = new ArrayList<>();
             

            String line = "";
            //Create the file reader
            //Read the CSV file header to skip it

           // fileReader.readLine();

             

            //Read the file line by line starting from the second line

            while ((line = fileReader.readLine()) != null) {

                //Get all tokens available in line

                String[] tokens = line.split(comma);

                if (tokens.length > 0) {

                    //Create a new student object and fill his  data

                    splitting s1 = new splitting(tokens[0], tokens[1], Integer.parseInt(tokens[4]));

                    list.add(s1);

                }

            }
            Collections.sort(list, splitting.rank_sorter);
            for (int loop = 0 ;loop<list.size();loop++){
                    splitting s5 = list.get(loop);
                    R1.setText(R1.getText()+s5.title+","+s5.p_id);
                    R1.setText(R1.getText()+'\n');
                
            }
        } 
         catch (Exception e) {

            System.out.println("Error in CsvFileReader !!!");

            e.printStackTrace();

        } finally {

            try {

                fileReader.close();

            } catch (IOException e) {

                System.out.println("Error while closing fileReader !!!");

                e.printStackTrace();

            }
            }
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(searchh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(searchh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(searchh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(searchh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new searchh().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane R1;
    private javax.swing.JTextField T1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
class splitting{    
    String term;
    String title;
    String p_id;
    int t_count;
    int b_count;
    int rank;

  public splitting(){
        term="";
        p_id="";
        t_count=0;
        b_count=0;
        rank = 0;
  }
  public splitting(String id,String title,int t1,int t2,int t3){
        p_id = id;
        this.title = title;
        t_count = t1;
        b_count =t2;
        rank = t3;
  }
   public splitting(String id,String title,int t1){
        p_id = id;
        this.title = title;
        rank = t1;
  }

    public int getRank() {
        return rank;
    }
    public static Comparator<splitting> rank_sorter = new Comparator<splitting>() {

        @Override
	public int compare(splitting s1, splitting s2) {

	   int rank1 = s1.rank;
	   int rank2 = s2.rank;
	   /*For descending order*/
	   return rank2-rank1;
   }};


}
